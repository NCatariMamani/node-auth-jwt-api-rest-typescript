// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model users {
  id    Int     @id @default(autoincrement())
  email String  @unique
  password  String
  created_at DateTime @default(now())
  updated_at DateTime?
  encargados encargados[]
  roles     Role[]    @relation("usersRoles")
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  permissions Permission[] @relation("RolePermissions")
  users       users[]    @relation("usersRoles")
}

model Permission {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  roles     Role[]  @relation("RolePermissions")
}



model alojamientos {
  id    Int     @id @default(autoincrement())
  nombre String  
  noHabitaciones Int
  direccion String
  compras compras[]
  encargados encargados[]
  habitaciones habitaciones[]
  inventarios inventarios[]
  productoCompras productoCompras[]
  reservaciones reservaciones[]
  created_at DateTime
  updated_at DateTime?
}

model compras {
  id    Int     @id @default(autoincrement())
  fecha DateTime
  alojamientoId Int
  alojamientos alojamientos @relation(fields: [alojamientoId], references: [id])
  created_at DateTime
  updated_at DateTime?
}

model encargados {
  id    Int     @id @default(autoincrement())
  nombre String
  paterno String
  materno String
  ci Int
  ext String
  celular Int
  reservaciones reservaciones[]
  alojamientoId Int
  alojamiento alojamientos @relation(fields: [alojamientoId], references: [id])
  userId Int
  user users @relation(fields: [userId], references: [id])
  created_at DateTime
  updated_at DateTime?
}

model habitaciones {
  id    Int     @id @default(autoincrement())
  noHabitacion Int
  preferencias String
  estado String
  reservaciones reservaciones[]
  alojamientoId Int
  alojamientos alojamientos @relation(fields: [alojamientoId], references: [id])
  created_at DateTime
  updated_at DateTime?
}

model inventarios {
  id    Int     @id @default(autoincrement())
  descripcion String
  fecha DateTime
  alojamientoId Int
  alojamientos alojamientos @relation(fields: [alojamientoId], references: [id])
  productoInventarios productoInventarios[]
  created_at DateTime
  updated_at DateTime?
}

model productos {
  id    Int     @id @default(autoincrement())
  nombre String
  precio String
  estado String
  productoCompras productoCompras[]
  productoInventarios productoInventarios[]
  productoVentas productoVentas[]
  created_at DateTime
  updated_at DateTime?
}

model productoCompras {
  id    Int     @id @default(autoincrement())
  productoId Int
  productos productos @relation(fields: [productoId],references: [id])
  alojamientoId Int
  alojamientos alojamientos @relation(fields: [alojamientoId], references: [id])
  created_at DateTime
  updated_at DateTime?
}

model productoInventarios {
  id    Int     @id @default(autoincrement())
  cantidad Int
  entrada Int
  salida Int 
  stock Int
  fecha DateTime
  productoId Int
  productos productos @relation(fields: [productoId],references: [id])
  inventarioId Int
  inventarios inventarios @relation(fields: [inventarioId], references: [id])
  created_at DateTime
  updated_at DateTime?
}

model reservaciones {
  id    Int     @id @default(autoincrement())
  nombre String
  paterno String
  materno String
  ci Int
  extencion String
  nombreA String?
  paternoA String?
  maternoA String?
  ciA Int?
  extencionA String?
  fecha DateTime
  horaEntrada String
  horaSalida String?
  tiempo String
  compania String
  costoHabitacion String
  costoExtra String?
  total String
  ventas ventas[]
  habitacionId Int
  habitaciones habitaciones @relation(fields: [habitacionId], references: [id])
  encargadoId Int
  encargados encargados @relation(fields: [encargadoId], references: [id])
  alojamientoId Int
  alojamientos alojamientos @relation(fields: [alojamientoId], references: [id])
  created_at DateTime
  updated_at DateTime?
}

model ventas {
  id    Int     @id @default(autoincrement())
  fecha DateTime
  reservacionId Int
  productoVentas productoVentas[]
  reservaciones reservaciones @relation(fields: [reservacionId], references: [id])
  created_at DateTime
  updated_at DateTime?
}

model productoVentas {
  id    Int     @id @default(autoincrement())
  productoId Int
  productos productos @relation(fields: [productoId], references: [id])
  ventaId Int
  ventas ventas @relation(fields: [ventaId], references: [id])
  created_at DateTime
  updated_at DateTime?
}





